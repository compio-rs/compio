[package]
name = "compio-fs"
version = "0.7.0"
description = "Filesystem IO for compio"
categories = ["asynchronous", "filesystem"]
keywords = ["async", "fs"]
edition = { workspace = true }
authors = { workspace = true }
readme = { workspace = true }
license = { workspace = true }
repository = { workspace = true }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
# Workspace dependencies
compio-buf = { workspace = true }
compio-driver = { workspace = true }
compio-io = { workspace = true }
compio-runtime = { workspace = true }

cfg-if = { workspace = true }

# Windows specific dependencies
[target.'cfg(windows)'.dependencies]
widestring = { workspace = true }
windows-sys = { workspace = true, features = [
    "Win32_Foundation",
    "Win32_Security",
    "Win32_Storage_FileSystem",
    "Win32_System_Pipes",
    "Win32_System_SystemServices",
] }

# Windows specific dev dependencies
[target.'cfg(windows)'.dev-dependencies]
windows-sys = { workspace = true, features = ["Win32_Security_Authorization"] }

# Unix specific dependencies
[target.'cfg(unix)'.dependencies]
libc = { workspace = true }
os_pipe = { workspace = true }

[build-dependencies]
cfg_aliases = { workspace = true }

# Shared dev dependencies for all platforms
[dev-dependencies]
compio-runtime = { workspace = true, features = ["time"] }
compio-macros = { workspace = true }
futures-util = { workspace = true }
tempfile = { workspace = true }

# Windows specific dev dependencies
[target.'cfg(target_os = "windows")'.dev-dependencies]
windows-sys = { workspace = true, features = ["Win32_Security_Authorization"] }

# Unix specific dev dependencies
[target.'cfg(unix)'.dev-dependencies]
nix = { workspace = true, features = ["fs"] }

[features]
io-uring = ["compio-runtime/io-uring"]
polling = ["compio-runtime/polling"]

read_buf = ["compio-buf/read_buf", "compio-io/read_buf"]
windows_by_handle = []
nightly = ["read_buf", "windows_by_handle"]
